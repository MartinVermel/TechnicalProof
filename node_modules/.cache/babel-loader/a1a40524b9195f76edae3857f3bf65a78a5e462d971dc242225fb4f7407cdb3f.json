{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const githubApi = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://api.github.com/\"\n  }),\n  endpoints: builder => ({\n    searchRepos: builder.query({\n      query: query => `search/repositories?q=${query}`\n    }),\n    getRepoCollab: builder.query({\n      query: _ref => {\n        let {\n          owner,\n          repo\n        } = _ref;\n        return `repos/${owner}/${repo}/collaborators`;\n      }\n    })\n  })\n});\nexport const {\n  useSearchReposQuery,\n  useGetRepoCollabQuery\n} = githubApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","githubApi","baseQuery","baseUrl","endpoints","builder","searchRepos","query","getRepoCollab","_ref","owner","repo","useSearchReposQuery","useGetRepoCollabQuery"],"sources":["/home/martin/TechnicalProof/technicaltest/src/api.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const githubApi = createApi({\n  baseQuery: fetchBaseQuery({ baseUrl: \"https://api.github.com/\" }),\n  endpoints: (builder) => ({\n    searchRepos: builder.query<any, string>({\n      query: (query) => `search/repositories?q=${query}`,\n    }),\n    getRepoCollab: builder.query<any, { owner: string|undefined; repo: string|undefined }>({\n      query: ({ owner, repo }) => `repos/${owner}/${repo}/collaborators`,\n    }),\n  }),\n});\n\nexport const { useSearchReposQuery, useGetRepoCollabQuery } = githubApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;EACjCG,SAAS,EAAEF,cAAc,CAAC;IAAEG,OAAO,EAAE;EAA0B,CAAC,CAAC;EACjEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAc;MACtCA,KAAK,EAAGA,KAAK,IAAM,yBAAwBA,KAAM;IACnD,CAAC,CAAC;IACFC,aAAa,EAAEH,OAAO,CAACE,KAAK,CAA2D;MACrFA,KAAK,EAAEE,IAAA;QAAA,IAAC;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAAF,IAAA;QAAA,OAAM,SAAQC,KAAM,IAAGC,IAAK,gBAAe;MAAA;IACpE,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,mBAAmB;EAAEC;AAAsB,CAAC,GAAGZ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}