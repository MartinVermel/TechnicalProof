{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const githubApi = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://api.github.com/\"\n  }),\n  endpoints: builder => ({\n    searchRepos: builder.query({\n      query: query => `search/repositories?q=${query}`\n    }),\n    // getRepoCollab: builder.query<any, { owner: string|undefined; repo: string|undefined }>({\n    //   query: ({ owner, repo, token }) => `repos/${owner}/${repo}/collaborators`,\n    // }),\n\n    useGetRepoCollabQuery: builder.query({\n      query: _ref => {\n        let {\n          owner,\n          repo,\n          token\n        } = _ref;\n        return {\n          url: 'repos/${owner}/${repos}/collaborators',\n          headers: {\n            Authorization: 'token ${token}',\n            Accept: 'application/vnd.github+json'\n          }\n        };\n      }\n    })\n  })\n});\nexport const {\n  useSearchReposQuery,\n  useGetRepoCollabQuery\n} = githubApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","githubApi","baseQuery","baseUrl","endpoints","builder","searchRepos","query","useGetRepoCollabQuery","_ref","owner","repo","token","url","headers","Authorization","Accept","useSearchReposQuery"],"sources":["/home/martin/TechnicalProof/technicaltest/src/api.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const githubApi = createApi({\n  baseQuery: fetchBaseQuery({ baseUrl: \"https://api.github.com/\" }),\n  endpoints: (builder) => ({\n    searchRepos: builder.query<any, string>({\n      query: (query) => `search/repositories?q=${query}`,\n    }),\n    // getRepoCollab: builder.query<any, { owner: string|undefined; repo: string|undefined }>({\n    //   query: ({ owner, repo, token }) => `repos/${owner}/${repo}/collaborators`,\n    // }),\n\n    useGetRepoCollabQuery: builder.query<any, {owner: string; repo: string; token}>({\n      query: ({owner, repo, token}) => ({\n        url: 'repos/${owner}/${repos}/collaborators',\n        headers: {\n          Authorization: 'token ${token}',\n          Accept: 'application/vnd.github+json',\n        },\n      }),\n    }),\n  }),\n});\n\nexport const { useSearchReposQuery, useGetRepoCollabQuery } = githubApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,OAAO,MAAMC,SAAS,GAAGF,SAAS,CAAC;EACjCG,SAAS,EAAEF,cAAc,CAAC;IAAEG,OAAO,EAAE;EAA0B,CAAC,CAAC;EACjEC,SAAS,EAAGC,OAAO,KAAM;IACvBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAc;MACtCA,KAAK,EAAGA,KAAK,IAAM,yBAAwBA,KAAM;IACnD,CAAC,CAAC;IACF;IACA;IACA;;IAEAC,qBAAqB,EAAEH,OAAO,CAACE,KAAK,CAA4C;MAC9EA,KAAK,EAAEE,IAAA;QAAA,IAAC;UAACC,KAAK;UAAEC,IAAI;UAAEC;QAAK,CAAC,GAAAH,IAAA;QAAA,OAAM;UAChCI,GAAG,EAAE,uCAAuC;UAC5CC,OAAO,EAAE;YACPC,aAAa,EAAE,gBAAgB;YAC/BC,MAAM,EAAE;UACV;QACF,CAAC;MAAA;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,mBAAmB;EAAET;AAAsB,CAAC,GAAGP,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}