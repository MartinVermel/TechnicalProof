{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useGetRepoCollabQuery } from './api';\nconst Collaborators = () => {\n  _s();\n  const owner = \"facebook\";\n  const repo = \"react\";\n  const token = \"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\";\n  const {\n    data: collaborators,\n    isLoading\n  } = useGetRepoCollabQuery({\n    owner\n  });\n};\n\n// export const RepoPage: React.FC = () => {\n//     const { owner, repo } = useParams<{ owner: string; repo: string }>();\n//     const { data, isLoading } = useGetRepoCollabQuery({ owner, repo, token });\n\n//   return (\n//     <div>\n//       <h2>Collaborators for {owner}/{repo}</h2>\n//       {isLoading && <p>Loading...</p>}\n//       {data?.map((collaborator: any) => (\n//         <div key={collaborator.id}>\n//           <img src={collaborator.avatar_url} alt={collaborator.login} width=\"50\" height=\"50\" />\n//           <p>{collaborator.login}</p>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n_s(Collaborators, \"jEb9YsejcE4UevhASlbFfJm0Xe0=\", false, function () {\n  return [useGetRepoCollabQuery];\n});\n_c = Collaborators;\nvar _c;\n$RefreshReg$(_c, \"Collaborators\");","map":{"version":3,"names":["useGetRepoCollabQuery","Collaborators","_s","owner","repo","token","data","collaborators","isLoading","_c","$RefreshReg$"],"sources":["/home/martin/TechnicalProof/technicaltest/src/Repo.tsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {useGetRepoCollabQuery} from './api';\n\ntype Collaborator = {\n  id: number;\n  login: string;\n  picture_url: string;\n};\n\nconst Collaborators: React.FC = () => {\n  const owner = \"facebook\";\n  const repo = \"react\";\n  const token = \"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\";\n\n  const {data: collaborators, isLoading} = useGetRepoCollabQuery({owner, })\n}\n\n// export const RepoPage: React.FC = () => {\n//     const { owner, repo } = useParams<{ owner: string; repo: string }>();\n//     const { data, isLoading } = useGetRepoCollabQuery({ owner, repo, token });\n\n//   return (\n//     <div>\n//       <h2>Collaborators for {owner}/{repo}</h2>\n//       {isLoading && <p>Loading...</p>}\n//       {data?.map((collaborator: any) => (\n//         <div key={collaborator.id}>\n//           <img src={collaborator.avatar_url} alt={collaborator.login} width=\"50\" height=\"50\" />\n//           <p>{collaborator.login}</p>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };"],"mappings":";AAEA,SAAQA,qBAAqB,QAAO,OAAO;AAQ3C,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAMC,KAAK,GAAG,UAAU;EACxB,MAAMC,IAAI,GAAG,OAAO;EACpB,MAAMC,KAAK,GAAG,0CAA0C;EAExD,MAAM;IAACC,IAAI,EAAEC,aAAa;IAAEC;EAAS,CAAC,GAAGR,qBAAqB,CAAC;IAACG;EAAO,CAAC,CAAC;AAC3E,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAD,EAAA,CAxBMD,aAAuB;EAAA,QAKcD,qBAAqB;AAAA;AAAAS,EAAA,GAL1DR,aAAuB;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}