{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst apiSlice = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.github.com'\n  }),\n  endpoints: builder => ({\n    getRepo: builder.query({\n      query: searchString => `/search/repositories?q=${searchString}`\n    }),\n    getPeople: builder.query({\n      query: name => `/repos/${name}/collaborators`\n    }),\n    getPplPhoto: builder.query({})\n  })\n});\nexport const {\n  useGetRepoQuery,\n  useGetPeopleQuery\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","baseQuery","baseUrl","endpoints","builder","getRepo","query","searchString","getPeople","name","getPplPhoto","useGetRepoQuery","useGetPeopleQuery"],"sources":["/home/martin/TechnicalTest/technicaltest/src/api.tsx"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\n\nconst apiSlice = createApi({\n    baseQuery: fetchBaseQuery({baseUrl: 'https://api.github.com'}),\n    endpoints: (builder) => ({\n        getRepo: builder.query({\n            query: (searchString: string) => `/search/repositories?q=${searchString}`,\n        }),\n        getPeople: builder.query({\n            query: (name: string) =>  `/repos/${name}/collaborators`,\n        }),\n        getPplPhoto: builder.query({\n            \n        })\n    }),\n});\n\nexport const { useGetRepoQuery, useGetPeopleQuery } = apiSlice;"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEtE,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EACvBG,SAAS,EAAEF,cAAc,CAAC;IAACG,OAAO,EAAE;EAAwB,CAAC,CAAC;EAC9DC,SAAS,EAAGC,OAAO,KAAM;IACrBC,OAAO,EAAED,OAAO,CAACE,KAAK,CAAC;MACnBA,KAAK,EAAGC,YAAoB,IAAM,0BAAyBA,YAAa;IAC5E,CAAC,CAAC;IACFC,SAAS,EAAEJ,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAAGG,IAAY,IAAO,UAASA,IAAK;IAC7C,CAAC,CAAC;IACFC,WAAW,EAAEN,OAAO,CAACE,KAAK,CAAC,CAE3B,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,eAAe;EAAEC;AAAkB,CAAC,GAAGZ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}